//button is a component 
//can be used anywhere in the project, later as well
//so we make a sep. component file for it 

//the rules for the button go here:

/*we want the visited and linked states to look exactly similar
so we add them by using comma (AND) */

//nest all the btn selectors in the .btn selector using CSS

.btn{
    &:link, &:visited{

        font-size: $default-font-size;
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
    
        /* makes it a block element */
        display: inline-block;
    
        /* gives a round fillet to the border */
        border-radius: 10rem;
    
        /* transition property -> transition: <property-name-to-be-transitioned> */
        transition: all 0.2s;
    
        position: relative;
    }

    
    &--animated{
        animation: moveInButton 0.5s ease-out 0.75s;
        animation-fill-mode: backwards;

        /* will automatically apply the styles of 0% before the animation starts */
    }



    &:hover{
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,0.2);

        /*black shadow with 20% opacity*/
    }

    &:active {
        transform: translateY(-0.1rem);
        box-shadow: 0 0.5rem 1rem rgba($color-black,0.2);
    }

    &::after{

        /*have to specify the content and display property*/
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top:0;
        left:0;
        z-index: -1;

        /*have to put transition property in initial state*/
        transition: all 0.4s;
    
    }

    &--white{
        background-color: $color-white;
        color: $color-grey-dark;

        &::after{
            background-color: $color-white;
        }
    }

    &--green{
        background-color: $color-primary;
        color: $color-white;

        &::after{
            background-color: $color-primary;
        }
    }



    &:hover::after{
        transform: scaleX(1.4) scaleY(1.6);
        opacity: 0;
    }
}

.btn-text{
    &:link, &:visited{

        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;

        //getting rid of the underlining
        text-decoration: none;

        //including border at the bottom
        border-bottom: 1px solid $color-primary;

        padding: 3px;

        //small px values can be left as it is 
        transition: all 0.2s;

    }

    &:hover{

        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black,0.15);

        transform: translate(-2px);

    }

    &:active{

        box-shadow: 0 .5rem 2rem rgba($color-black,0.1);

    }
}